@model EmployeePortal.ViewModel.UpdateEmployeeViewModel

<div class="inner-container">
    <div class="card w-75">
        <div class="container employee-update-container">
            <h2>Update Employee Details</h2>

            <!-- Initial Message -->
            <div id="initialMessage" class="alert alert-info alert-dismissible fade show" role="alert">
                Please select an employee from the list or search using a valid name or email address.
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>

            <!-- Dropdown for selecting employees -->
            <div class="input-group role-map">
                <label for="employeeSelect">Select Employee:</label>
                <select id="employeeSelect" class="form-select">
                    <option value="">-- Select Employee --</option>
                    @foreach (var employee in Model.Employees)
                    {
                        <option value="@employee.EmailAddress">@employee.FirstName @employee.LastName (@employee.EmailAddress)</option>
                    }
                </select>
            </div>

            <!-- Search box for employee -->
            <div class="input-group">
                <input type="text" id="employeeSearch" class="form-control" placeholder="Search Employee by Name or Email" />
                <button id="searchButton" class="btn btn-primary role-modify-submit">Search</button>
            </div>

            <!-- Employee Details Form -->
            <form id="employeeUpdateForm" style="display: none;" method="post" asp-action="UpdateEmployee" enctype="multipart/form-data">
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="validation-summary-errors">
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <p>@error.ErrorMessage</p>
                        }
                    </div>
                }
                <div class="card">
                    <div class="card-body">
                        <div class="input-group align-items-center">
                            <label asp-for="SelectedEmployee.FirstName"></label>
                            <input asp-for="SelectedEmployee.FirstName" id="firstName" class="form-control" required />
                        </div>
                        <div class="input-group align-items-center">
                            <label asp-for="SelectedEmployee.LastName"></label>
                            <input asp-for="SelectedEmployee.LastName" id="lastName" class="form-control" required />
                        </div>
                        <div class="input-group align-items-center">
                            <label asp-for="SelectedEmployee.Gender"></label>
                            <select asp-for="SelectedEmployee.Gender" id="gender" asp-items="ViewBag.Genders" class="department-select flex-1" required>
                                <option value="">Gender</option>
                            </select>
                        </div>
                        <div class="input-group align-items-center">
                            <label asp-for="SelectedEmployee.ProfilePicture"></label>
                            <input asp-for="SelectedEmployee.ProfilePicture" name="imageUpload" id="profilePicture" type="file" accept="image/*" class="form-control" />
                        </div>
                        <div class="input-group align-items-center">
                            <label asp-for="SelectedEmployee.EmailAddress"></label>
                            <input asp-for="SelectedEmployee.EmailAddress" id="emailAddress" type="email" class="form-control" required disabled />
                        </div>
                        <input type="hidden" id="emailHidden" name="emailAddress"/>
                        <div class="input-group align-items-center">
                            <label asp-for="SelectedEmployee.MobileNumber"></label>
                            <input asp-for="SelectedEmployee.MobileNumber" id="mobileNumber" class="form-control" />
                        </div>
                        <div class="input-group align-items-center">
                            <label asp-for="SelectedEmployee.Address"></label>
                            <input asp-for="SelectedEmployee.Address" id="address" class="form-control" required />
                        </div>
                        <div class="input-group align-items-center">
                            <label asp-for="SelectedEmployee.Department"></label>
                            <select asp-for="SelectedEmployee.Department" id="department" asp-items="ViewBag.Departments" class="flex-1">
                                <option value="">--Select Department--</option>
                            </select>
                        </div>
                        <div class="input-group align-items-center">
                            <label asp-for="SelectedEmployee.Salary"></label>
                            <input asp-for="SelectedEmployee.Salary" id="salary" type="number" class="form-control" />
                        </div>

                        <button type="submit" class="btn btn-dark w-100">Update Details</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    var employees = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Employees));

    $(document).ready(function () {
        // Load employee details on selection from dropdown
        $('#employeeSelect').change(function () {
            var selectedEmployeeEmail = $(this).val();
            $('#employeeSearch').val(''); // Reset the search input

            var employeeDetail = employees.find(emp => emp.EmailAddress === selectedEmployeeEmail);

            if (employeeDetail) {
                fillEmployeeForm(employeeDetail);
                $('#initialMessage').hide();
                $('#employeeUpdateForm').show();
            } else {
                resetForm();
            }
        });

        // Search functionality
        function performSearch() {
            var searchTerm = $('#employeeSearch').val().trim().toLowerCase();
            if (searchTerm === '') {
                alert("Please enter a name or email address to search.");
                return;
            }

            $('#employeeSelect').val(''); // Reset the dropdown selection

            var employeeDetail = employees.find(emp =>
                emp.FirstName.toLowerCase().includes(searchTerm) ||
                emp.LastName.toLowerCase().includes(searchTerm) ||
                emp.EmailAddress.toLowerCase().includes(searchTerm)
            );

            if (employeeDetail) {
                fillEmployeeForm(employeeDetail);
                $('#initialMessage').hide();
                $('#employeeUpdateForm').show();
            } else {
                resetForm();
                alert("No results found for the given search term. Please try again.");
            }
        }

        // Fill the employee form
        function fillEmployeeForm(employee) {
            $('#firstName').val(employee.FirstName);
            $('#lastName').val(employee.LastName);
            $('#gender').val(employee.Gender);
            $('#emailAddress').val(employee.EmailAddress);
            $('#emailHidden').val(employee.EmailAddress);
            $('#mobileNumber').val(employee.MobileNumber);
            $('#address').val(employee.Address);
            $('#department').val(employee.Department);
            $('#salary').val(employee.Salary);
        }

        // Reset form and display initial message
        function resetForm() {
            $('#employeeUpdateForm').hide();
            $('#initialMessage').show();
            $('#employeeUpdateForm').find("input[type=text], input[type=email], input[type=number]").val("");
        }

        $('#searchButton').click(function () {
            performSearch();
        });

        $('#employeeSearch').keydown(function (event) {
            if (event.key === 'Enter') {
                event.preventDefault();
                performSearch();
            }
        });

        $('#employeeSearch').on('input', function () {
            if ($(this).val() === '') {
                resetForm();
                $('#employeeSelect').val('');
            }
        });
    });
</script>
